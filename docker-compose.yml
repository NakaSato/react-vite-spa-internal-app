version: "3.8"

services:
  # Development service
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: solar-spa-dev
    ports:
      - "3000:3000"
      - "3001:3001" # HMR port
    volumes:
      - .:/app
      - /app/node_modules
      - bun-cache:/root/.bun
    environment:
      - NODE_ENV=development
      - BUILD_TARGET=development
      - VITE_API_BASE_URL=http://localhost:5001/api/v1
      - FORCE_OPTIMIZE=false
    networks:
      - solar-network
    depends_on:
      - api-mock
    profiles:
      - dev

  # Production service
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: production
    container_name: solar-spa-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - BUILD_TARGET=production
    networks:
      - solar-network
    profiles:
      - prod

  # Mock API service for development
  api-mock:
    image: mockoon/cli:latest
    container_name: solar-api-mock
    ports:
      - "5002:5002"
    volumes:
      - ./mock-api/solar-api.json:/data/solar-api.json:ro
    command: ["--data", "/data/solar-api.json", "--port", "5002"]
    networks:
      - solar-network
    profiles:
      - dev
      - mock

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: solar-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app-prod
    networks:
      - solar-network
    profiles:
      - prod
      - nginx

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: solar-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - solar-network
    profiles:
      - cache
      - prod

networks:
  solar-network:
    driver: bridge

volumes:
  bun-cache:
    driver: local
  redis-data:
    driver: local
